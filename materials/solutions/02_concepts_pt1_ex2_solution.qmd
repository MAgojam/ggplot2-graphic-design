---
title: "Graphic Design with ggplot2"
subtitle: "<span style='font-size:1.75em;line-height:1.1;'>Concepts of the <code>{ggplot2}</code> Package Pt. 1:<br><span style='font-weight:500;'>Solution Exercise 2</span></span>"
author: "<b style='color:#28a87d;'><a href='https://www.cedricscherer.com'>Cédric Scherer</a></b> **//** rstudio::conf **//** July 2022"
format:
  revealjs:
    theme: css/style.scss
    footer: '**[Cédric Scherer](https::/cedricscherer.com) //** rstudio::conf **//** July 2022'
    #'rstudio::conf(workshop = "Graphic Design with ggplot2", instructor = "Cédric Scherer")'
    transition: fade
    progress: true
    multiplex: false
    preview-links: true
    scrollable: false
    hide-inactive-cursor: true
    highlight-style: printing
    chalkboard:
      theme: whiteboard
      boardmarker-width: 4
      buttons: true
    pause: true
    mainfont: Cabinet Grotesk
editor: source
knitr:
  opts_chunk:
    dev: "ragg_png"
    retina: 1
    dpi: 200
execute:
  freeze: auto
  cache: true
  echo: true
  fig-width: 5
  fig-height: 6
---


## Exercise 2

::: question
* Explore the TfL bike sharing data visually:<br>**create a boxplot of counts per weather type**
    - Turn the plot into a jitter strips plot (random noise across the x axis)
    - Combine both chart types (jittered points on top of the boxplots)
    - <span style='color:#5DB699;'>Bonus: Sort the boxplot-jitter hybrid by median counts</span>
    - Apply your favorite theme to the plot.
    - Add meaningful labels.
    - <span style='color:#5DB699;'>Bonus: Explore other chart types to visualize the distributions.</span>
* Save the plot as a vector graphic with a decent plot size.
:::



## Import Data (if not yet)

```{r}
#| label: import-data-exercise
bikes <- readr::read_csv(
  here::here("data", "london-bikes-custom.csv"),
  col_types = "Dcfffilllddddc"
)

bikes$season <- forcats::fct_inorder(bikes$season)

library(tidyverse)
```



## Boxplot of Counts vs. Weather Type

```{r}
#| label: concepts-pt1-exercise-2-1
#| output-location: column
ggplot(
    bikes,
    aes(x = weather_type, y = count)
  ) +
  geom_boxplot()
```



## Avoid Overlapping Axis Labels

```{r}
#| label: concepts-pt1-exercise-2-2
#| output-location: column
#| code-line-numbers: "3"
ggplot(
    bikes,
    aes(x = count, y = weather_type)
  ) +
  geom_boxplot()
```



## Avoid Overlapping Axis Labels

```{r}
#| label: concepts-pt1-exercise-2-3
#| output-location: column
#| code-line-numbers: "3,4"
ggplot(
    bikes,
    aes(x = stringr::str_wrap(weather_type, 6),
        y = count)
  ) +
  geom_boxplot()
```



## Apply a Theme

```{r}
#| label: concepts-pt1-exercise-2-4
#| output-location: column
#| code-line-numbers: "1,2,3,4"
theme_set(theme_minimal(
  base_size = 14,
  base_family = "Roboto Condensed"
))

ggplot(
    bikes,
    aes(x = stringr::str_wrap(weather_type, 6),
        y = count)
  ) +
  geom_boxplot()
```



## Customize the Theme

```{r}
#| label: concepts-pt1-exercise-2-5
#| output-location: column
#| code-line-numbers: "6,7,8,9"
theme_set(theme_minimal(
  base_size = 14,
  base_family = "Roboto Condensed"
))

theme_update(
  panel.grid.major.x = element_blank(),
  panel.grid.minor = element_blank()
)

ggplot(
    bikes,
    aes(x = stringr::str_wrap(weather_type, 6),
        y = count)
  ) +
  geom_boxplot()
```



## Add Meaningful Labels

```{r}
#| label: concepts-pt1-exercise-2-6
#| output-location: column
#| code-line-numbers: "3,4"
ggplot(
    bikes,
    aes(x = stringr::str_wrap(weather_type, 6),
        y = count)
  ) +
  geom_boxplot() +
  labs(x = NULL, y = "Reported bike shares")
```



## Add Meaningful Labels

```{r}
#| label: concepts-pt1-exercise-2-7
#| output-location: column
#| code-line-numbers: "8,9"
ggplot(
    bikes,
    aes(x = stringr::str_wrap(weather_type, 6),
        y = count)
  ) +
  geom_boxplot() +
  labs(
    x = NULL, y = NULL,
    title = "Reported bike shares by weather type"
  )
```



## Add Meaningful Labels

```{r}
#| label: concepts-pt1-exercise-2-8
#| output-location: column
#| code-line-numbers: "1,2,3,4|2|3|12"
theme_update(
  plot.title.position = "plot",
  axis.title = element_blank()
)

ggplot(
    bikes,
    aes(x = stringr::str_wrap(weather_type, 6),
        y = count)
  ) +
  geom_boxplot() +
  ggtitle("Reported bike shares by weather type")
```


## Jitter Strips of Counts per Weather Type

```{r}
#| label: concepts-pt1-exercise-2-9
#| output-location: column
#| code-line-numbers: "5,6,7"
ggplot(
    bikes,
    aes(x = stringr::str_wrap(weather_type, 6),
        y = count)
  ) +
  geom_jitter(
    alpha = .2
  ) +
  ggtitle("Reported bike shares by weather type")
```



## Jitter Strips of Counts per Weather Type

::: {layout-ncol=2}
```{r}
#| label: concepts-pt1-exercise-2-10
#| fig-height: 2.9
#| code-line-numbers: "6,7,9"
ggplot(
    bikes,
    aes(x = str_wrap(weather_type, 6),
        y = count)
  ) +
  geom_point(
    position = "jitter",
    alpha = .2
  )
```

```{r}
#| label: concepts-pt1-exercise-2-11
#| fig-height: 2.9
#| code-line-numbers: "6,7,9"
ggplot(
    bikes,
    aes(x = str_wrap(weather_type, 6),
        y = count)
  ) +
  geom_point(
    position = position_jitter(),
    alpha = .2
  )
```
:::



## Jitter Strips of Counts vs. Weather Type

```{r}
#| label: concepts-pt1-exercise-2-12
#| output-location: column
#| code-line-numbers: "7,8,9,10,11"
ggplot(
    bikes,
    aes(x = str_wrap(weather_type, 6),
        y = count)
  ) +
  geom_point(
    position = position_jitter(
      seed = 2022,
      width = .2,
      height = 0
    ),
    alpha = .2
  ) +
  ggtitle("Reported bike shares by weather type")
```



## Boxplot + Jitter Strip Hybrid

```{r}
#| label: concepts-pt1-exercise-2-13
#| output-location: column
#| code-line-numbers: "6"
ggplot(
    bikes,
    aes(x = str_wrap(weather_type, 6),
        y = count)
  ) +
  geom_boxplot() +
  geom_point(
    position = position_jitter(
      seed = 2022,
      width = .2,
      height = 0
    ),
    alpha = .2
  ) +
  ggtitle("Reported bike shares by weather type")
```



## Boxplot + Jitter Strip Hybrid

```{r}
#| label: concepts-pt1-exercise-2-14
#| output-location: column
#| code-line-numbers: "7,8,9"
ggplot(
    bikes,
    aes(x = str_wrap(weather_type, 6),
        y = count)
  ) +
  geom_boxplot(
     outlier.shape = NA
     # outlier.color = "transparent"
     # outlier.alpha = 0
  ) +
  geom_point(
    position = position_jitter(
      seed = 2022,
      width = .2,
      height = 0
    ),
    alpha = .2
  ) +
  ggtitle("Reported bike shares by weather type")
```



## Bonus: Sort Weather Types

```{r}
#| label: concepts-pt1-exercise-2-15
#| output-location: column
#| code-line-numbers: "4,5,6"
ggplot(
    bikes,
    aes(
      x = forcats::fct_reorder(
        str_wrap(weather_type, 6), -count
      ),
      y = count)
  ) +
  geom_boxplot(
     outlier.shape = NA
     # outlier.color = "transparent"
     # outlier.alpha = 0
  ) +
  geom_point(
    position = position_jitter(
      seed = 2022,
      width = .2,
      height = 0
    ),
    alpha = .2
  ) +
  ggtitle("Reported bike shares by weather type")
```



## Save the Plot

```{r}
#| label: concepts-pt1-exercise-2-16
#| eval: false
ggsave(here::here("exercises", "plots", "02_concepts_pt1_ex2.pdf"),
       width = 5, height = 6.5, device = cairo_pdf)
```

```{r}
#| label: concepts-pt1-exercise-2-16-png
#| include: false
ggsave(here::here("exercises", "plots", "02_concepts_pt1_ex2.png"),
       width = 5, height = 6.5, dpi = 350, bg = "white")
```

![](plots/02_concepts_pt1_ex2.png){fig-align="center" fig-alt="The final plot with an aspect ratio of 5 x 7 inches."}

:::footer
:::



# Alternative Chart Types<br>to Visualize Distributions



## Let's Update our Data Set

```{r}
#| label: sort-weather-type
bikes <-
  bikes %>%
  mutate(
    weather_type_fct = stringr::str_wrap(
      weather_type, 6
    ),
    weather_type_fct = forcats::fct_reorder(
      weather_type_fct, -count
    )
  )

levels(bikes$weather_type_fct)
```



## Let's Store Our ggplot Setup

```{r}
#| label: store-basic-setup
g <-
  ggplot(
    bikes,
    aes(x = weather_type_fct,
        y = count)
  ) +
  ggtitle(
    "Reported bike shares by weather type"
  )
```



## Beeswarm Plots with {ggbeeswarm}

```{r}
#| label: boxplot-beeswarm-hybrid
#| output-location: column
#| code-line-numbers: "5,6,7,8,9|5|6,7,8"
g +
  geom_boxplot(
     outlier.shape = NA
  ) +
  ggbeeswarm::geom_beeswarm(
    size = .3,
    alpha = .2,
    cex = .6
  )
```



## Beeswarm Plots with {ggbeeswarm}

```{r}
#| label: boxplot-beeswarm-hybrid-quasirandom
#| output-location: column
#| code-line-numbers: "5,6,7,8,9"
g +
  geom_boxplot(
     outlier.shape = NA
  ) +
  ggbeeswarm::geom_quasirandom(
    size = .3,
    alpha = .2,
    width = .3,
    varwidth = TRUE
  )
```



## Sina Plots with {ggforce}

```{r}
#| label: boxplot-sina-hybrid
#| output-location: column
#| code-line-numbers: "5,6,7,8,9"
g +
  geom_boxplot(
     outlier.shape = NA
  ) +
  ggforce::geom_sina(
    size = .5,
    alpha = .2,
    maxwidth = 1.2
  )
```



## Barcode Strips

```{r}
#| label: boxplot-barcode-hybrid
#| output-location: column
#| code-line-numbers: "6,7|6,7,8|6,7,8,9|6,7,8,9,10|3,|10"
g +
  geom_boxplot(
     position = position_nudge(x = .15),
     width = .35
  ) +
  geom_point(
    shape = "-",
    size = 8,
    alpha = .1,
    position = position_nudge(x = -.15)
  )
```



## Violin Plots

```{r}
#| label: violin-ggplot
#| output-location: column
#| code-line-numbers: "2"
g +
  geom_violin()
```



## Violin Plots

```{r}
#| label: violin-ggplot-custom
#| output-location: column
#| code-line-numbers: "3,4,5"
g +
  geom_violin(
    scale = "count",
    draw_quantiles = c(.5),
    fill = "grey80"
  )
```



## Violin Plots

```{r}
#| label: violin-ggplot-custom-2
#| output-location: column
#| code-line-numbers: "3,4,5,6,7"
g +
  geom_violin(
    scale = "width",
    draw_quantiles = c(.5),
    trim = FALSE,
    bw = 250,
    fill = "grey80"
  )
```



## Violin Plots with {ggdist}

```{r}
#| label: violin-ggdist
#| output-location: column
#| code-line-numbers: "2"
g +
  ggdist::stat_eye()
```



## Violin Plots with {ggdist}

```{r}
#| label: violin-ggdist-custom-1
#| output-location: column
#| code-line-numbers: "3,4,5"
g +
  ggdist::stat_eye(
    .width = c(0.5, 0.95),
    width = 1.5,
    adjust = .33
  )
```



## Violin Plots with {ggdist}

```{r}
#| label: violin-ggdist-custom-2
#| output-location: column
#| code-line-numbers: "3"
g +
  ggdist::stat_eye(
    aes(thickness = stat(f*n)),
    .width = c(0.5, 0.95),
    adjust = .33
  )
```



## Violin Plots with {ggdist}

```{r}
#| label: violin-ggdist-custom-3
#| output-location: column
#| code-line-numbers: "6,7,8"
g +
  ggdist::stat_eye(
    aes(thickness = stat(f*n)),
    .width = c(0.5, 0.95),
    adjust = .5,
    interval_size_range = c(.4, 2.5),
    point_size = 1.2,
    point_color = "white"
  )
```



## Raincloud Plots with {ggdist}

```{r}
#| label: raincloud-ggdist-rain
#| output-location: column
#| code-line-numbers: "2,6,7,8,9,10"
g +
  ggdist::stat_halfeye(
    aes(thickness = stat(f*n)),
    .width = 0,
    width = .5,
    position = position_nudge(x = .2)
  ) +
  geom_jitter(
    width = .1,
    size = .5,
    alpha = .1
  )
```



## Raincloud Plots with {ggdist}

```{r}
#| label: raincloud-ggdist-boxplot
#| output-location: column
#| code-line-numbers: "7,8,9,10"
g +
  ggdist::stat_halfeye(
    aes(thickness = stat(f*n)),
    color = NA,
    width = .5,
    position = position_nudge(x = .2)
  ) +
  geom_boxplot(
    width = .3,
    outlier.color = NA
  ) +
  geom_jitter(
    width = .1,
    size = .5,
    alpha = .1
  )
```



## Raincloud Plots with {gghalves}

```{r}
#| label: raincloud-ggdist-rain-gghalves
#| output-location: column
#| code-line-numbers: "12,13,14,15,16,17"
g +
  ggdist::stat_halfeye(
    aes(thickness = stat(f*n)),
    color = NA,
    width = .5,
    position = position_nudge(x = .1)
  ) +
  geom_boxplot(
    width = .1,
    outlier.size = .2
  ) +
  gghalves::geom_half_point(
    side = "l",
    range_scale = .4,
    size = .3,
    alpha = .1
  )
```



## Raincloud Plots with {gghalves}

```{r}
#| label: raincloud-ggdist-rain-gghalves-flipped
#| output-location: column
#| code-line-numbers: "18"
g +
  ggdist::stat_halfeye(
    aes(thickness = stat(f*n)),
    color = NA,
    width = .5,
    position = position_nudge(x = .1)
  ) +
  geom_boxplot(
    width = .1,
    outlier.size = .2
  ) +
  gghalves::geom_half_point(
    side = "l",
    range_scale = .4,
    size = .3,
    alpha = .1
  ) +
  coord_flip()
```
